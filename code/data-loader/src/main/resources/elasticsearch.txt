[sense]
1. create index
DELETE /resume
POST /resume

2. create mapping
PUT /resume
{
  "mappings": {
    "online": {
      "properties": {
        "userId": {
          "type": "long",
          "store": true,
          "index": "not_analyzed"
        },
        "gender": {
          "type": "integer",
          "store": true,
          "index": "not_analyzed"
        },
        "education": {
          "type": "integer",
          "store": true,
          "index": "not_analyzed"
        },
        "birthDate": {
          "type": "date",
          "store": true,
          "index": "not_analyzed",
          "format": "yyyy-MM-dd"
        },
        "joinWorkDate": {
          "type": "date",
          "store": true,
          "index": "not_analyzed",
          "format": "yyyy-MM-dd"
        },
        "location": {
          "type": "string",
          "store": true,
          "index": "not_analyzed"
        },
        "objectvie": {
          "type": "nested",
          "properties": {
            "jobType": {
              "type": "integer",
              "store": true,
              "index": "not_analyzed"
            },
            "status": {
              "type": "integer",
              "store": true,
              "index": "not_analyzed"
            },
            "industry": {
              "type": "integer",
              "store": true,
              "index": "not_analyzed"
            },
            "location": {
              "type": "string",
              "store": true,
              "index": "not_analyzed"
            },
            "category": {
              "type": "string",
              "store": true,
              "index": "not_analyzed"
            },
            "position": {
              "type": "string",
              "store": true,
              "index": "analyzed"
            },
            "minSalary": {
              "type": "double",
              "store": true,
              "index": "not_analyzed"
            },
            "maxSalary": {
              "type": "double",
              "store": true,
              "index": "not_analyzed"
            }
          }
        },
        "workExperienceList": {
          "type": "nested",
          "properties": {
            "workStartTime": {
              "type": "string",
              "store": true,
              "index": "not_analyzed"
            },
            "workEndTime": {
              "type": "string",
              "store": true,
              "index": "not_analyzed"
            },
            "company": {
              "type": "string",
              "store": true,
              "index": "not_ analyzed"
            },
            "category": {
              "type": "string",
              "store": true,
              "index": "not_analyzed"
            },
            "position": {
              "type": "string",
              "store": true,
              "index": "analyzed"
            },
            "workDesc": {
              "type": "string",
              "store": true,
              "index": "analyzed"
            }
          }
        }
      }
    }
  }
}

GET /resume/_mapping
GET /resume/online/_mapping
GET /resume/online/_search
{
  "query": {
    "match_all": {}
  }
}


[example]
DELETE /library
PUT /library
{
  "mappings": {
    "book": {
      "properties": {
        "author": {
          "type": "object",
          "properties": {
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            }
          }
        },
        "characters": {
          "type": "string"
        },
        "copies": {
          "type": "long",
          "ignore_malformed": false
        },
        "otitle": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "year": {
          "type": "long",
          "ignore_malformed": false
        },
        "available": {
          "type": "boolean"
        },
        "section": {
          "type": "long"
        }
      }
    }
  }
}




[mofang]

POST /_analyze
{
  "analyzer": "jcseg_search",
  "text": "联想是全球最大的笔记本厂商"
}


DELETE /mofang
PUT /mofang
{
  "mappings": {
    "resume": {
      "properties": {
        "userId": {
          "type": "long",
          "index": "no"
        },
        "name": {
          "type": "string",
          "index": "analyzed",
          "analyzer": "jcseg_search"
        },
        "gender": {
          "type": "short",
          "index": "no"
        },
        "birthDate": {
          "type": "date",
          "index": "no",
          "format": ["yyyy-MM-dd"]
        },
        "education": {
          "type": "short",
          "index": "no"
        },
        "available": {
          "type": "boolean",
          "index": "no"
        },
        "objectvie": {
          "type": "object",
          "properties": {
            "status": {
              "type": "integer",
              "index": "no"
            },
            "category": {
              "type": "string",
              "index": "not_analyzed"
            },
            "position": {
              "type": "string",
              "index": "analyzed",
              "analyzer": "jcseg_search"
            },
            "salary": {
              "type": "short",
              "index": "no"
            },
            "city": {
              "type": "string",
              "index": "not_analyzed"
            }
          }
        },
        "workExp": {
          "type": "nested",
          "properties": {
            "company": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "index": "not_analyzed"
                },
                "desc": {
                  "type": "string",
                  "index": "analyzed",
                  "analyzer": "jcseg_search"
                },
                "position": {
                  "type": "string",
                  "index": "analyzed",
                  "analyzer": "jcseg_search"
                }
              }
            }
          }
        }
      }
    }
  }
}